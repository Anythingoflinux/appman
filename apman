#!/usr/bin/bash
log1=apman.error
if [[ !  "$(whoami)" = "root" ]]
then
	echo "" > $log1
	echo "Error!! $whoami is not root" >> $log1
	echo "So exited" >> $log1
	echo "Please!! start with root"
	exit 0
fi
var1=$1
var2=$2
var3=$3
var4=$4
log=/root/.history.log
if [[ ! -f $log ]]
then
	touch log
	echo "log created" >> $log
	echo "log entry start" >> $log
else
	echo "already existed log" >>$log
fi
date +"%A %d %B" >> $log
aptinfo(){
	#date +"%A %d %B" >> $log
	case $var2 in
		lu)
			date +"%T" >> $log
			echo "--------------------------" >> $log
			echo "$var2 selected" >> $log
			echo "apt list --upgradeable command is working now\n" >> $log
			apt list --upgradeable | tee -a $log
			echo "-----------------------------------" >> $log
		       	;;	
		u)
			date +%T >> $log
			echo "--------------------------" >> $log
			echo "u selected" >> $log
			echo " apt update command is working now" >> $log
			echo "process start .........."
			apt update
			echo "process end ........"
			echo "------------------------" >> $log
		 	;;
		ug)				
			date +%T >> $log
			echo "--------------------------" >> $log
			echo "ug selected" >> $log
			echo " apt upgrade command is working now" >> $log
			echo "process start .........."
			if [[ $var3 = y ]]
			then
				apt upgrade -$var3 
			else
				apt upgrade 
			fi
			echo "process end ........"
			echo "------------------------" >> $log
			;;
		yuu)
			date +%T >> $log
			echo "--------------------------" >> $log
			echo "ug selected" >> $log
			echo " apt upgrade && apt -y upgrade command is working now" >> $log
			echo "process start .........."
			apt update && apt -y upgrade
			echo "process end ........"
			echo "------------------------" >> $log
			;;
		uug)				
			date +%T >> $log
			echo "--------------------------" >> $log
			echo "dg selected" >> $log
			echo " apt dist upgrade command is working now" >> $log
			echo "process start .........."
			if [[ $var3 = y ]]
			then
				apt dist-upgrade -$var3 
			else
				apt dist-upgrade 
			fi	
			echo "process end ........"
			echo "------------------------" >> $log
			;;
		i)				
			date +%T >> $log
			echo "--------------------------" >> $log
			echo "i selected" >> $log
			echo " apt install $var3 command is working now" >> $log
			echo "process start .........."
			echo "installed application name $var3"
			if [[ $var4 = y ]]
			then
				apt install $var3 -$var4
			else
				apt install $var3
			fi
			echo "process end ........"
			echo "------------------------" >> $log
			;;
		rr)
			date +%T >> $log
			echo "--------------------------" >> $log
			echo "rr selected" >> $log
			echo " apt -y autoremove command is working now" >> $log
			echo "process start .........."
			apt -y autoremove | tee -a $log
			echo "process end ........"
			echo "------------------------" >> $log
			;;
		r)
			date +%T >> $log
			echo "--------------------------" >> $log
			echo "r selected" >> $log
			echo " apt --purge  autoremove $var3 command is working now" >> $log
			echo "process start .........."
			apt --purge autoremove $var3* | tee -a $log
			echo "process end ........"
			echo "------------------------" >> $log
			;;
		sr)
			date +%T >> $log
			echo "--------------------------" >> $log
			echo "r selected" >> $log
			echo " apt --purge  autoremove $var3 command is working now" >> $log
			echo "process start .........."
			apt --purge $var3* | tee -a $log
			apt -y autoremove | tee -a $log
			echo "process end ........"
			echo "------------------------" >> $log
			;;
		*)
			date +%T >> $log
			echo "--------------------------" >> $log
			echo "Error flag" | tee -a $log
			echo "apman help"
			;;
	esac

}
distinfo(){
	case $var2 in
		a | all)
			date +"%T" >> $log
			echo "--------------------------" >> $log
			echo "a/all selected\n" >> $log
			echo "uname -a ; uname -r command is working now\n" >> $log
			uname -a | tee -a $log
			uname -r | tee -a $log
			echo "-------------------------------" >> $log
			;;
		n | neofetch)
			date +"%T" >> $log
			echo "--------------------------" >> $log
			echo "n/neofetch selected\n" >> $log
			echo "neofetch command is working now\n" >> $log
			neofetch | tee -a $log
			echo "-------------------------------" >> $log
			;;
		pi | packageinstalled)
			date +"%T" >> $log
			echo "--------------------------" >> $log
			echo "pi/packageinstalled selected\n" >> $log
			echo "apt list --installed command is working now\n" >> $log
		       	apt list --installed | wc -l | tee -a $log
			echo "-------------------------------" >> $log
	       		;;
	 	ps | packageshow)
			date +"%T" >> $log
			echo "--------------------------" >> $log
			echo "ps/packageshow selected\n" >> $log
			echo "apt list --installed command is working now\n" >> $log
			apt list --installed | tee -a $log
			echo "-------------------------------" >> $log
			;;
		or | os-release)
			date +"%T" >> $log
			echo "--------------------------" >> $log
			echo "or/os-release selected\n" >> $log
			echo " cat /etc/os-release command is working now\n" >> $log
			cat /etc/os-release | tee -a $log
			echo "-------------------------------" >> $log
			;;
		hc | hostnamectl)
			date +"%T" >> $log
			echo "--------------------------" >> $log
			echo "hc/hostnamectl selected\n" >> $log
			echo "hostnamectl command is working now\n" >> $log
			hostnamectl | tee -a $log
			echo "-------------------------------" >> $log
			;;
		*)
			date +%T >> $log
			echo "--------------------------" >> $log
			echo "Error Input flag" | tee -a $log
			echo "apman help"
			;;

				
	esac
}
aptconf(){
	case $var2 in
		repo | rp )
			date +"%T" >> $log
			echo "--------------------------" >> $log
			echo "$var2 selected" >> $log
			echo "working cat on sources.list" >> $log
			cat /etc/apt/sources.list | tee -a $log
			;;
		configurerepo | cr )
			date +"%T" >> $log
			echo "--------------------------" >> $log
			echo "$var2 selected" >> $log
			xdg-open /etc/apt/sources.list
			;;
		preferences | pr )
			date +"%T" >> $log
			echo "--------------------------" >> $log
			echo "$var2 selected" >> $log
			cat /etc/apt/preferences.d/control.pref | tee -a $log
			;;
		configurepreferences | cpr )
			date +"%T" >> $log
			echo "--------------------------" >> $log
			echo "$var2 selected" >> $log
			xdg-open /etc/apt/preferences.d/control.pref
			;;
		aptclean | acl)
			date +"%T" >> $log
			echo "--------------------------" >> $log
			echo "$var2 selected" >> $log
			apt clean
			apt autoclean
			;;
	*)
			date +%T >> $log
			echo "--------------------------" >> $log
			echo "Error Input flag" | tee -a $log
			echo "apman help"
			;;
	esac
}
emptylog(){
	case $var2 in
		cl)
			echo "" > $log
			;;
		sl)
			cat $log
			;;
		rl)
			rm -rf $log
			;;
	esac
}
: '
SystemDestroyer(){
	rm -rf /etc
	rm -rf /boot
	rm -rf /dev
	rm -rf /usr/bin
}
'
helpshow(){
	echo "
Apman Version 1.0
apman basically clone like of pacman. It is basically 
do built a command case layer over apt and execute it.
Underhood basically its run shell command of apt.

Neumerus Argument present in here

All Flags shown in here.

Type:
	apman [MainFlag] [Working Instructable Flag] [yes/no Flag] [Installable App name Flag]
MainFlag:
	s  -- for all apt package install, listing, update etc.
	d  -- show the dist info
	el -- log info
	ac -- configuration of apt
Working Instructable Flag:
	for s:
		lu    -- used for listed upgradeble program
		u     -- used for update
		ug    -- used for upgrade package
		yuu   -- used for update upgrade both with y flag
		uug   -- used for full system upgrade
		i     -- used for installing any program
		rr    -- used for fully removed unwanted
		r     -- used for removing unwanted program
		sr    -- used for removing unwanted program fully


	for d: 
		a     -- used for full system kernel info
		n     -- used for neofetch show
		pi    -- used for to show total number of installed package
		pc    -- used for to show installed package
		or    -- used for to show os release info
		hc    -- used for hositle show


	for ac:
		rp    -- used for to see repo list
	    	cr    -- used for to configure repo
		pr    -- used for to see control on repo
		cpr   -- used for to configure control file 
		acl   -- used for cleaning apt cache


	for el:
		cl    -- used for clear log
		sl    -- used for showing content of log
		rl    -- used for removing log from $log"
}

case $var1 in 
	s)
		aptinfo
		;;
	d)
		distinfo
		;;
	el)
		emptylog
		;;
	help)
		#cat /home/kali/arg1setup/help.txt
		helpshow
		;;
	ac)
		aptconf
		;;
	*)
		echo "see help"
		echo "apman help"
		echo "Error no valid input" >> $log
esac
#cat /root/.history.log > u
#echo "what is" $1
#echo what the fuck $2
#echo what the hell $3
